name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]

concurrency:
  group: pr-checks-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      docs_changed: ${{ steps.filter.outputs.docs }}
      web_changed: ${{ steps.filter.outputs.web }}
      api_changed: ${{ steps.filter.outputs.api }}
      docs_only: ${{ steps.docs_only.outputs.docs_only }}
      labels: ${{ steps.labels.outputs.labels }}
      is_fork: ${{ steps.is_fork.outputs.is_fork }}
    steps:
      - uses: actions/checkout@v4
      - name: Collect labels
        id: labels
        run: |
          echo "labels=${{ join(github.event.pull_request.labels.*.name, ',') }}" >> $GITHUB_OUTPUT
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            docs:
              - 'docs/**'
              - '**/*.md'
              - 'README.md'
            web:
              - 'web/**'
            api:
              - 'api/**'
      - name: Compute docs-only
        id: docs_only
        run: |
          DOCS=${{ steps.filter.outputs.docs }}
          WEB=${{ steps.filter.outputs.web }}
          API=${{ steps.filter.outputs.api }}
          if [ "$DOCS" = "true" ] && [ "$WEB" != "true" ] && [ "$API" != "true" ]; then
            echo "docs_only=true" >> $GITHUB_OUTPUT
          else
            echo "docs_only=false" >> $GITHUB_OUTPUT
          fi
      - name: Detect fork
        id: is_fork
        run: |
          if [ "${{ github.event.pull_request.head.repo.fork }}" = "true" ]; then
            echo "is_fork=true" >> $GITHUB_OUTPUT
          else
            echo "is_fork=false" >> $GITHUB_OUTPUT
          fi

  markdown:
    name: Markdown lint & links
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.docs_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || true
      - name: Markdown lint
        run: |
          pnpm md:lint || echo "md:lint script 未定義のためスキップ"
      - name: Link check
        run: |
          pnpm md:links || echo "md:links script 未定義のためスキップ"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Run ESLint / Prettier
        run: |
          pnpm lint || echo "lint script 未定義のためスキップ"
          pnpm format:check || echo "format:check script 未定義のためスキップ"

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: TypeScript check
        run: |
          pnpm typecheck || echo "typecheck script 未定義のためスキップ"

  unit-web:
    name: Unit Tests (web)
    runs-on: ubuntu-latest
    needs: [changes, lint, typecheck]
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Run unit tests (web)
        run: |
          pnpm test:unit:web || echo "test:unit:web script 未定義のためスキップ"
      - name: Upload coverage (web)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-web
          path: |
            coverage/**
          if-no-files-found: ignore

  unit-api:
    name: Unit Tests (api)
    runs-on: ubuntu-latest
    needs: [changes, lint, typecheck]
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Run unit tests (api)
        run: |
          pnpm test:unit:api || echo "test:unit:api script 未定義のためスキップ"
      - name: Upload coverage (api)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-api
          path: |
            coverage/**
          if-no-files-found: ignore

  build-web:
    name: Build (web)
    runs-on: ubuntu-latest
    needs: [unit-web]
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Build web
        run: |
          pnpm build:web || echo "build:web script 未定義のためスキップ"

  build-api:
    name: Build (api)
    runs-on: ubuntu-latest
    needs: [unit-api]
    if: needs.changes.outputs.docs_only != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Build api
        run: |
          pnpm build:api || echo "build:api script 未定義のためスキップ"

  integration-api:
    name: Integration Tests (api)
    runs-on: ubuntu-latest
    needs: [build-api]
    if: needs.changes.outputs.docs_only != 'true' && needs.changes.outputs.is_fork != 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Run integration tests (api)
        run: |
          pnpm test:integration:api || echo "test:integration:api script 未定義のためスキップ"
      - name: Upload integration results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-api-results
          path: |
            junit/**
            coverage/**
          if-no-files-found: ignore

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [build-web, build-api]
    if: needs.changes.outputs.docs_only != 'true' && !contains(needs.changes.outputs.labels, 'skip-e2e') && contains(needs.changes.outputs.labels, 'run-e2e')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        run: |
          corepack enable
          pnpm --version || npm i -g pnpm@8
          pnpm install --frozen-lockfile || pnpm install
      - name: Install Playwright browsers
        run: |
          pnpm exec playwright install --with-deps || true
      - name: Run E2E tests
        run: |
          pnpm test:e2e || (echo "Retry E2E once" && pnpm test:e2e)
      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            playwright-report/**
            test-results/**
          if-no-files-found: ignore

